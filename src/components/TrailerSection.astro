---
import VideoPlayer from "./VideoPlayer.jsx";
import { Icon } from "astro-icon";

export interface Props {
    imagePosition?: 'left' | 'right';
    title?: string;
    description?: string;
    buttonText?: string;
    buttonLink?: string;
    buttonIcon?: string;
    videoSrc?: string;
}

const { imagePosition, title, description, buttonText, buttonLink, buttonIcon, videoSrc } = Astro.props;
---
<div class={`section ${imagePosition === 'right' ? 'image-right' : 'image-left'}`}>
    <div class="text-content">
        <h2>{title}</h2>
        <p>
            {description}
        </p>
        <div class="buttons">
            <a href={buttonLink}>
            <div class="cta-button">
                <span>{buttonText}</span>
                <!-- Example CTA Text -->
                <Icon name={buttonIcon} width="36" class="bounce-right" />
            </div>
            </a>
        </div>
    </div>
    <div class="trailer">
        <VideoPlayer src={videoSrc} />
    </div>
</div>



<style>
  h2 {
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: 20px;
  }
  .section {
    display: flex;
    flex-direction: row;  /* Default is image on the left */
    align-items: center;
    text-align: right;
  }

  .section.image-right {
    flex-direction: row-reverse;  /* Flip the order for image on the right */
    text-align: left;
  }
  .section.image-right .buttons {
    justify-content: flex-start; /* aligns button to the left when image is on the right */
  }
  .trailer {
    width: 50vw;
  }
  .text-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 0 80px;
  }
  .buttons {
    display: flex;
    flex-direction: row;
    justify-content: flex-end; /* aligns button to the right (default) */
    margin-top: 20px;
  }

  .cta-button {
    display: flex;
    align-items: center;
    background-color: hsl(var(--color-theme-200)); /* Adjust to desired color */
    border-radius: 25px;
    padding: 10px 20px;
    transition: background-color 0.3s ease;
  }
  .cta-button:hover {
    background-color: hsl(
      var(--color-theme-100)
    ); /* Adjust to a slightly darker color for hover */
  }
  .cta-button span {
    margin-right: 10px; /* Spacing between text and icon */
    font-size: 1.2rem;
    font-weight: 600;
  }

@media (max-width: 767px) {
    .section, .section.image-right {
      flex-direction: column;  /* Stack on mobile, regardless of the image position */
      align-items: center; /* Center the items */
    }
    .section {
      padding: 0 auto; /* Add some lateral padding */
    }
    .text-content {
      margin-bottom: 40px; /* Increase spacing to 40px */
      max-width: 100vw; /* Ensure it spans the full width */
      width: 100%; /* Set width to 100% */
      height: auto; /* Don't constrain the height, let content dictate it */
    }
    .trailer {
      width: 100vw; /* Set trailer to full viewport width */
      max-width: 100%; /* Prevent it from overflowing its container */
    }
}


  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .bounce {
    animation: bounce 2s infinite;
  }

  @keyframes bounce-right {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateX(0);
    }
    40% {
      transform: translateX(10px);
    }
    60% {
      transform: translateX(5px);
    }
  }

  .bounce-right {
    animation: bounce-right 2s infinite;
  }
</style>
